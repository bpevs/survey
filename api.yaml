openapi: 3.0.3
info:
  title: Survey
  description: |-
    Build User Survey Forms using a toml definition file
  version: 0.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://github.com/bpevs/survey
servers:
  - url: https://survey.bpev.me
tags:
  - name: user
    description: User operations
  - name: survey
    description: Create, Read, Update, Delete, and Answer forms
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /survey:
    post:
      tags:
        - survey
      summary: Create a new survey
      description: Create a new survey
      operationId: createSurvey
      requestBody:
        description: Create a new survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/xml:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
            application/xml:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - survey_auth:
            - write:survey
            - read:survey
  /survey/{surveyId}:
    put:
      tags:
        - survey
      summary: Update an existing survey
      description: Update an existing survey by Id
      operationId: updateSurvey
      parameters:
        - name: surveyId
          in: path
          description: ID of survey to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/xml:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
            application/xml:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Invalid ID supplied
        '404':
          description: Survey not found
        '422':
          description: Validation exception
      security:
        - survey_auth:
            - write:survey
            - read:survey
    get:
      tags:
        - survey
      summary: Find survey by ID
      description: Returns a single survey
      operationId: getSurveyById
      parameters:
        - name: surveyId
          in: path
          description: ID of survey to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
            application/xml:
              schema:
                $ref: '#/components/schemas/Survey'
        '400':
          description: Invalid ID supplied
        '404':
          description: Survey not found
      security:
        - api_key: []
        - survey_auth:
            - write:survey
            - read:survey
    delete:
      tags:
        - survey
      summary: Deletes a survey
      description: delete a survey
      operationId: deleteSurvey
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: surveyId
          in: path
          description: Survey id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid survey value
      security:
        - survey_auth:
            - write:survey
            - read:survey
  /survey/{surveyId}/results:
    get:
      tags:
        - survey
      summary: Return results of a survey
      description: A json with survey results
      operationId: getSurveyResults
      parameters:
        - name: surveyId
          in: path
          description: ID of survey to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - survey_auth:
            - read:survey
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Survey:
      required:
        - name
        - template
        - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "My Survey"
        template:
          type: string
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        status:
          type: string
          description: survey lifecycle status
          enum:
            - preparing
            - open
            - completed
      xml:
        name: survey
  requestBodies:
    Survey:
      description: Survey Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Survey'
        application/xml:
          schema:
            $ref: '#/components/schemas/Survey'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    survey_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:survey: modify surveys in your account
            read:survey: read your surveys
    api_key:
      type: apiKey
      name: api_key
      in: header

